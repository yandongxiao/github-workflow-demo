name: Label issues
on:
  issues:
    types:
      - reopened
      - opened
  pull_request:
    types: [closed]
jobs:
  label_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Label issue
        uses: actions/github-script@v5
        with:
          script: |
            const issueTitle = context.payload.issue.title.toLowerCase();
            const labelsToAdd = [];

            if (issueTitle.includes('bug')) {
              labelsToAdd.push('bug');
            }

            if (issueTitle.includes('feature')) {
              labelsToAdd.push('feature');
            }
            
            if (issueTitle.includes('enhancement')) {
              labelsToAdd.push('enhancement');
            }

            if (issueTitle.includes('documentation')) {
              labelsToAdd.push('documentation');
            }

            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: labelsToAdd
              });
            }
  check-description:
    runs-on: ubuntu-latest
    steps:
      - name: Fail if description does not close an issue
        uses: actions/github-script@v5
        with:
          script: |
            const prNumber = context.issue.number;
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            if (!(/close[sd]? #[0-9]+/i.test(pr.body))) {
              core.setFailed('PR description does not close an issue.');
            }
  comment:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Comment on PR
        uses: actions/github-script@v5
        with:
          script: |
            const prComment = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'Thank you for your contribution! Your pull request has been merged.'
            };
            await github.rest.issues.createComment(prComment);
